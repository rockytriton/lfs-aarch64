@subheading idn2_to_ascii_4i
@anchor{idn2_to_ascii_4i}
@deftypefun {int} {idn2_to_ascii_4i} (const uint32_t * @var{input}, size_t @var{inlen}, char * @var{output}, int @var{flags})
@var{input}: zero terminated input Unicode (UCS-4) string.

@var{inlen}: number of elements in  @code{input} .

@var{output}: output zero terminated string that must have room for at
least 63 characters plus the terminating zero.

@var{flags}: optional @code{idn2_flags}  to modify behaviour.

The ToASCII operation takes a sequence of Unicode code points that make
up one domain label and transforms it into a sequence of code points in
the ASCII range (0..7F). If ToASCII succeeds, the original sequence and
the resulting sequence are equivalent labels.

It is important to note that the ToASCII operation can fail.
ToASCII fails if any step of it fails. If any step of the
ToASCII operation fails on any label in a domain name, that domain
name MUST NOT be used as an internationalized domain name.
The method for dealing with this failure is application-specific.

The inputs to ToASCII are a sequence of code points.

ToASCII never alters a sequence of code points that are all in the ASCII
range to begin with (although it could fail). Applying the ToASCII operation multiple
effect as applying it just once.

The default behavior of this function (when flags are zero) is to apply
the IDNA2008 rules without the TR46 amendments. As the TR46
non-transitional processing is nowadays ubiquitous, when unsure, it is
recommended to call this function with the @code{IDN2_NONTRANSITIONAL} 
and the @code{IDN2_NFC_INPUT}  flags for compatibility with other software.

@strong{Warning:} With version 2.1.1 until before version 2.3.5 this
function was deprecated in favor @code{idn2_to_ascii_4i2()} .  We still
encourage you to use @code{idn2_to_ascii_4i2()}  when appropriate.

@strong{Returns:} On successful conversion @code{IDN2_OK}  is returned; if the
output label would have been too long @code{IDN2_TOO_BIG_LABEL}  is
returned, or another error code is returned.

@strong{Since:} 2.0.0
@end deftypefun

